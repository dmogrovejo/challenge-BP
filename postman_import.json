{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "account-controller",
      "description": "Account Controller"
    },
    {
      "name": "client-controller",
      "description": "Client Controller"
    },
    {
      "name": "movement-controller",
      "description": "Movement Controller"
    },
    {
      "name": "reports-controller",
      "description": "Reports Controller"
    }
  ],
  "paths": {
    "/api/clientes/": {
      "get": {
        "tags": [
          "client-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Client"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "client-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/clientes/{id}": {
      "get": {
        "tags": [
          "client-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "client-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "client-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/cuentas/": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accountDTO",
            "description": "accountDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/cuentas/{id}": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "account-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "description": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "account-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/movimientos/": {
      "get": {
        "tags": [
          "movement-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movement"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "movement-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "movement",
            "description": "movement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovementDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Movement"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/movimientos/{id}": {
      "get": {
        "tags": [
          "movement-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movement"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "movement-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "movement",
            "description": "movement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Movement"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "movement-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/reportes/": {
      "get": {
        "tags": [
          "reports-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fechaDesde",
            "in": "query",
            "description": "fechaDesde",
            "required": true,
            "type": "string"
          },
          {
            "name": "fechaHasta",
            "in": "query",
            "description": "fechaHasta",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "AHORROS",
            "CORRIENTE"
          ]
        },
        "client": {
          "$ref": "#/definitions/Client"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "inicialBalance": {
          "type": "number"
        },
        "status": {
          "type": "boolean"
        }
      },
      "title": "Account"
    },
    "AccountDTO": {
      "type": "object",
      "properties": {
        "cliente": {
          "type": "string"
        },
        "estado": {
          "type": "boolean"
        },
        "numeroCuenta": {
          "type": "string"
        },
        "saldoInicial": {
          "type": "number"
        },
        "tipo": {
          "type": "string",
          "enum": [
            "AHORROS",
            "CORRIENTE"
          ]
        }
      },
      "title": "AccountDTO"
    },
    "Client": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string",
          "enum": [
            "FEMENINO",
            "MASCULINO",
            "NO_DEFINIDO"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "identification": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      },
      "title": "Client"
    },
    "Movement": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        },
        "balance": {
          "type": "number"
        },
        "dateMovement": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "movementType": {
          "type": "string",
          "enum": [
            "CREDITO",
            "DEBITO"
          ]
        },
        "value": {
          "type": "number"
        }
      },
      "title": "Movement"
    },
    "MovementDTO": {
      "type": "object",
      "properties": {
        "descripcion": {
          "type": "string"
        },
        "numeroCuenta": {
          "type": "string"
        },
        "valor": {
          "type": "number"
        }
      },
      "title": "MovementDTO"
    },
    "ReportDTO": {
      "type": "object",
      "properties": {
        "cliente": {
          "type": "string"
        },
        "estado": {
          "type": "boolean"
        },
        "fecha": {
          "type": "string"
        },
        "movimiento": {
          "type": "number"
        },
        "numeroCuenta": {
          "type": "string"
        },
        "saldoDisponible": {
          "type": "number"
        },
        "saldoInicial": {
          "type": "number"
        },
        "tipoCuenta": {
          "type": "string",
          "enum": [
            "AHORROS",
            "CORRIENTE"
          ]
        },
        "tipoMovimiento": {
          "type": "string",
          "enum": [
            "CREDITO",
            "DEBITO"
          ]
        }
      },
      "title": "ReportDTO"
    }
  }
}